variables:
  POSTGRES_DB: dusken
  CELERY_BROKER_URL: "redis://redis:6379/0"

default:
  image: nikolaik/python-nodejs:python3.8-nodejs20
  cache:
    paths:
      - .cache/pip
      - .venv
      - frontend/node_modules

build_frontend:
  stage: test
  script:
    - bin/build-frontend

tests:
  variables:
    POSTGRES_DB: dusken
    CELERY_BROKER_URL: "redis://redis:6379/0"
  services:
    - redis:latest
  stage: test
  before_script:
    - apt-get update && apt-get install libsasl2-dev libldap2-dev -y
    - poetry config virtualenvs.in-project true
    - poetry run pip install -U pip pre-commit
    - poetry install
  script:
    - poetry run python manage.py migrate
    - poetry run python manage.py check
    - poetry run pytest -v --cov dusken --cov-report term --cov-report xml:coverage.xml
    - poetry run bin/lint
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

deploy:
  stage: deploy
  before_script:
     # Install ssh if not already
     - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
     - eval $(ssh-agent -s)
     # Make SSH key available
     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
     - mkdir -p ~/.ssh
     - chmod 700 ~/.ssh
     # Add known host keys
     - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
     - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh gitdeploy@dreamcast.neuf.no "$(< bin/deploy)"
  only:
    - main
